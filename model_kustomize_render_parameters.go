/*
Manifest Maestro

Renders Kubernetes manifests with the help of various tools such as Helm and Kustomize.

API version: v1.2.0
Contact: e.rieb@posteo.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the KustomizeRenderParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KustomizeRenderParameters{}

// KustomizeRenderParameters struct for KustomizeRenderParameters
type KustomizeRenderParameters struct {
	ManifestInjections []KustomizeManifestInjection `json:"manifestInjections,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KustomizeRenderParameters KustomizeRenderParameters

// NewKustomizeRenderParameters instantiates a new KustomizeRenderParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKustomizeRenderParameters() *KustomizeRenderParameters {
	this := KustomizeRenderParameters{}
	return &this
}

// NewKustomizeRenderParametersWithDefaults instantiates a new KustomizeRenderParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKustomizeRenderParametersWithDefaults() *KustomizeRenderParameters {
	this := KustomizeRenderParameters{}
	return &this
}

// GetManifestInjections returns the ManifestInjections field value if set, zero value otherwise.
func (o *KustomizeRenderParameters) GetManifestInjections() []KustomizeManifestInjection {
	if o == nil || IsNil(o.ManifestInjections) {
		var ret []KustomizeManifestInjection
		return ret
	}
	return o.ManifestInjections
}

// GetManifestInjectionsOk returns a tuple with the ManifestInjections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KustomizeRenderParameters) GetManifestInjectionsOk() ([]KustomizeManifestInjection, bool) {
	if o == nil || IsNil(o.ManifestInjections) {
		return nil, false
	}
	return o.ManifestInjections, true
}

// HasManifestInjections returns a boolean if a field has been set.
func (o *KustomizeRenderParameters) HasManifestInjections() bool {
	if o != nil && !IsNil(o.ManifestInjections) {
		return true
	}

	return false
}

// SetManifestInjections gets a reference to the given []KustomizeManifestInjection and assigns it to the ManifestInjections field.
func (o *KustomizeRenderParameters) SetManifestInjections(v []KustomizeManifestInjection) {
	o.ManifestInjections = v
}

func (o KustomizeRenderParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KustomizeRenderParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ManifestInjections) {
		toSerialize["manifestInjections"] = o.ManifestInjections
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KustomizeRenderParameters) UnmarshalJSON(data []byte) (err error) {
	varKustomizeRenderParameters := _KustomizeRenderParameters{}

	err = json.Unmarshal(data, &varKustomizeRenderParameters)

	if err != nil {
		return err
	}

	*o = KustomizeRenderParameters(varKustomizeRenderParameters)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "manifestInjections")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKustomizeRenderParameters struct {
	value *KustomizeRenderParameters
	isSet bool
}

func (v NullableKustomizeRenderParameters) Get() *KustomizeRenderParameters {
	return v.value
}

func (v *NullableKustomizeRenderParameters) Set(val *KustomizeRenderParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableKustomizeRenderParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableKustomizeRenderParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKustomizeRenderParameters(val *KustomizeRenderParameters) *NullableKustomizeRenderParameters {
	return &NullableKustomizeRenderParameters{value: val, isSet: true}
}

func (v NullableKustomizeRenderParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKustomizeRenderParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



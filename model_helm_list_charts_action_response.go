/*
Manifest Maestro

Renders Kubernetes manifests with the help of various tools such as Helm and Kustomize.

API version: v1.2.0
Contact: e.rieb@posteo.de
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the HelmListChartsActionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelmListChartsActionResponse{}

// HelmListChartsActionResponse struct for HelmListChartsActionResponse
type HelmListChartsActionResponse struct {
	Items []map[string]interface{} `json:"items"`
	AdditionalProperties map[string]interface{}
}

type _HelmListChartsActionResponse HelmListChartsActionResponse

// NewHelmListChartsActionResponse instantiates a new HelmListChartsActionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelmListChartsActionResponse(items []map[string]interface{}) *HelmListChartsActionResponse {
	this := HelmListChartsActionResponse{}
	this.Items = items
	return &this
}

// NewHelmListChartsActionResponseWithDefaults instantiates a new HelmListChartsActionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelmListChartsActionResponseWithDefaults() *HelmListChartsActionResponse {
	this := HelmListChartsActionResponse{}
	return &this
}

// GetItems returns the Items field value
func (o *HelmListChartsActionResponse) GetItems() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *HelmListChartsActionResponse) GetItemsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *HelmListChartsActionResponse) SetItems(v []map[string]interface{}) {
	o.Items = v
}

func (o HelmListChartsActionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelmListChartsActionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HelmListChartsActionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHelmListChartsActionResponse := _HelmListChartsActionResponse{}

	err = json.Unmarshal(data, &varHelmListChartsActionResponse)

	if err != nil {
		return err
	}

	*o = HelmListChartsActionResponse(varHelmListChartsActionResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "items")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHelmListChartsActionResponse struct {
	value *HelmListChartsActionResponse
	isSet bool
}

func (v NullableHelmListChartsActionResponse) Get() *HelmListChartsActionResponse {
	return v.value
}

func (v *NullableHelmListChartsActionResponse) Set(val *HelmListChartsActionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHelmListChartsActionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHelmListChartsActionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelmListChartsActionResponse(val *HelmListChartsActionResponse) *NullableHelmListChartsActionResponse {
	return &NullableHelmListChartsActionResponse{value: val, isSet: true}
}

func (v NullableHelmListChartsActionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelmListChartsActionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


